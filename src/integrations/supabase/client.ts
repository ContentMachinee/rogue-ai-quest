
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jmwbmetxetjsnerzdkbd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imptd2JtZXR4ZXRqc25lcnpka2JkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIyMjEzNzMsImV4cCI6MjA1Nzc5NzM3M30.8yxeKbAN28XGx2RRaSsj50RVYU79YtDv3iemLjtZf9g";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Type-safe helper for tables not yet in the generated types
export const customQuery = <T = any>(table: string) => {
  // Use 'any' to bypass TypeScript's strict checking for table names
  // This allows us to query tables that aren't yet in the generated types
  return supabase.from(table) as any;
};
